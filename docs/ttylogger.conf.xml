<?xml version="1.0" encoding="ISO-8859-1"?>
<refentry id="stdin" xmlns="http://docbook.org/ns/docbook" version="5.0">
  <!--
      Header
  -->
  <refmeta>
    <refentrytitle>ttylogger.conf</refentrytitle>
    <manvolnum>5</manvolnum>
    <refmiscinfo class='source'>February 2017</refmiscinfo>
    <refmiscinfo class='manual'>Linux Audio Manual</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>ttylogger.conf</refname>
    <refpurpose>Configuration file for the <command>ttylogger</command><manvolnum>8</manvolnum> logging service.</refpurpose>
  </refnamediv>
  <info>
    <author>
      <personname>
	<firstname>Fred</firstname>
	<surname>Gleason</surname>
	<email>fredg@paravelsystems.com</email>
      </personname>
      <contrib>Application Author</contrib>
    </author>
  </info>

  <!--
      Body
  -->
  <refsynopsisdiv id='synopsis'>
    <cmdsynopsis>
      <command>/etc/ttylogger.conf</command>
      <sbr/>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1 id='description'><title>Description</title>
  <para>
    The file <command>ttylogger.conf</command><manvolnum>5</manvolnum> defines
    the set of textual sub-strings (or "patterns") for which to write log
    messages. Logs are written to one or more files in the directory
    indicated by the appropriate Directory= parameter (see below), with
    filenames of the form &quot;YYYY-MM-DD.txt&quot;.
  </para>
  </refsect1>

  <refsect1 id='fileformat'><title>File Format</title>
  <para>
    The file format consists of sections, each of which contain
    configuration information in the form of keyword/value pairs. Each
    section begins with with the LiveWire source number of the GPIO events
    to be configured in [] brackets, followed by zero  or more keyword/value
    pairs, with the keyword and value seperated by an '=' sign.  Lines
    starting with ; are ignored, as are blank lines.
  </para>
  </refsect1>

  <refsect1 id='global_section'><title>The <userinput>[Global]</userinput> Section</title>
  <para>
    The <userinput>[Global]</userinput> section defines parameters that affect
    operation of the overall service, such as serial device parameters.
  </para>
  <variablelist>
    <varlistentry>
      <term>
	TtyDevice=<replaceable>device</replaceable>
      </term>
      <listitem>
	<para>
	  Use the <replaceable>device</replaceable> serial device for
	  capturing messages. Default value is
	  <userinput>/dev/ttyS0</userinput>.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	TtySpeed=<replaceable>bps</replaceable>
      </term>
      <listitem>
	<para>
	  Use a baud-rate of <replaceable>bps</replaceable> bits per second.
	  Default value is <userinput>9600</userinput>.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	TtyParity=<replaceable>parity</replaceable>
      </term>
      <listitem>
	<para>
	  Set the parity to use. Valid values are <userinput>Even</userinput>,
	  <userinput>Odd</userinput> and <userinput>None</userinput>. Default
	  value is <userinput>None</userinput>.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	TtyWordLength=<replaceable>bits</replaceable>
      </term>
      <listitem>
	<para>
	  Use <replaceable>bits</replaceable> bits for the data bits.
	  Default value is <userinput>8</userinput>.
	</para>
      </listitem>
    </varlistentry>
  </variablelist>
  </refsect1>

  <refsect1 id='channel_section'><title>The <userinput>[Channel]</userinput>
  Sections</title>
  <para>
    One or more <userinput>[Channel<replaceable>n</replaceable>]</userinput>
    sections must be present, with each section being consecutively numbered
    with <replaceable>n</replaceable>, starting at <userinput>1</userinput>.
    Each such section may contain the following parameters:
  </para>
  <variablelist>
    <varlistentry>
      <term>
	Directory=<replaceable>path</replaceable>
      </term>
      <listitem>
	<para>
	  Write the log files for this Channel to the
	  <replaceable>path</replaceable> directory.
	  Filenames so written are of the form &quot;YYYY-MM-DD.txt&quot;.
	  Each <userinput>[Channel<replaceable>n</replaceable>]</userinput>
	  section must contain exactly one Directory= parameter.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	Pattern<replaceable>p</replaceable>=<replaceable>pat</replaceable>
      </term>
      <listitem>
	<para>
	  Monitor the serial stream of for the character sequence
	  <replaceable>pat</replaceable>. Multiple
	  Pattern<replaceable>p</replaceable>= parameters may be specified,
	  by incrementing <replaceable>p</replaceable>.
	</para>
	<para>
	  When a pattern is detected, one or more actions will occur as
	  directed by the String<replaceable>p</replaceable>= or
	  Script<replaceable>p</replaceable>= parameters. Additionally,
	  a "watchdog" can be set that will generate actions when more than
	  a set time passes without detection of the pattern. See the
	  WatchdogTimeout<replaceable>p</replaceable>=, 
	  WatchdogSetString<replaceable>p</replaceable>=, 
	  WatchdogResetString<replaceable>p</replaceable>= and 
	  WatchdogScript<replaceable>p</replaceable>= parameters, below.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	String<replaceable>p</replaceable>=<replaceable>str</replaceable>
      </term>
      <listitem>
	<para>
	  Log the string <replaceable>str</replaceable> to the log.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	Script<replaceable>p</replaceable>=<replaceable>str</replaceable>
      </term>
      <listitem>
	<para>
	  Execute the script <replaceable>script</replaceable>. The
	  script is called with the following argument:
	</para>
	<para>
	  <command><replaceable>script</replaceable></command>
	  <arg choice='req'><replaceable>pat</replaceable></arg>
	</para>
	<para>
	  <variablelist>
	    <varlistentry>
	      <term>
		<replaceable>pat</replaceable>
	      </term>
	      <listitem>
		<para>
		  The pattern that generated the event.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	WatchdogTimeout<replaceable>p</replaceable>=<replaceable>secs</replaceable>
      </term>
      <listitem>
	<para>
	  Generate a watchdog Set event if more than
	  <replaceable>secs</replaceable> elapse without detection of the
	  pattern.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	WatchdogSetString<replaceable>p</replaceable>=<replaceable>str</replaceable>
      </term>
      <listitem>
	<para>
	  Write <replaceable>str</replaceable> to the log when a watchdog
	  Set event is generated.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	WatchdogResetString<replaceable>p</replaceable>=<replaceable>str</replaceable>
      </term>
      <listitem>
	<para>
	  Write <replaceable>str</replaceable> to the log when a watchdog
	  Reset event is generated.
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
	WatchdogScript<replaceable>p</replaceable>=<replaceable>script</replaceable>
      </term>
      <listitem>
	<para>
	  Execute the <replaceable>script</replaceable> script when a
	  watchdog Set or Reset event is generated. The script will be
	  called with the following arguments:
	</para>
	<para>
	  <command><replaceable>script</replaceable></command>
	  <arg choice='req'><replaceable>pat</replaceable></arg>
	  <arg choice='req'><replaceable>state</replaceable></arg>
	</para>
	<para>
	  <variablelist>
	    <varlistentry>
	      <term>
		<replaceable>pat</replaceable>
	      </term>
	      <listitem>
		<para>
		  The pattern that generated the event.
		</para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term>
		<replaceable>set-state</replaceable>
	      </term>
	      <listitem>
		<para>
		  The new Watchdog state.
		  (&quot;<computeroutput>true</computeroutput>&quot; (Set)
		  or &quot;<computeroutput>false</computeroutput>&quot; (Reset))
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</para>
      </listitem>
    </varlistentry>
  </variablelist>
  </refsect1>

  <refsect1 id='example'><title>Example</title>
  <para>
    Following is an example of parameters for a serial stream:
  </para>
  <programlisting>
[Global]
TtyDevice=/dev/ttyS0
TtySpeed=9600
TtyParity=None
TtyWordLength=8

[Channel1]
Directory=/var/www/html/tty
Pattern1=#BOB@
String1=The #BOB@ pattern was detected!
Script1=/usr/local/bin/script.sh
WatchdogTimeout1=5
WatchdogSetString1=The #BOB@ pattern has failed!
WatchdogResetString1=The #BOB@ pattern has returned!
WatchdogScript1=/usr/local/bin/script.sh

Pattern2=#T48@
String2=The #T48@ pattern was detected!
Script2=/usr/local/bin/script.sh
WatchdogTimeout2=5
WatchdogSetString2=The #T48@ pattern has failed!
WatchdogResetString2=Thje #T48@ pattern has returned!
WatchdogScript2=/usr/local/bin/script.sh
 </programlisting>

  </refsect1>

  <refsect1 id='author'><title>Author</title>
  <para>
    Fred Gleason &lt;fredg@paravelsystems.com&gt;
  </para>
  </refsect1>

  <refsect1 id='see_also'><title>See Also</title>
  <para>
  <citerefentry>
    <refentrytitle>ttylogger</refentrytitle><manvolnum>8</manvolnum>
  </citerefentry>
  </para>
  </refsect1>
</refentry>

